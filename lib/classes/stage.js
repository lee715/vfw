// Generated by CoffeeScript 1.9.1
(function() {
  var RuleType, Stage;

  RuleType = require('./ruletype');

  Stage = (function() {
    function Stage(opts) {
      if (!(opts && opts.name)) {
        throw new Error('name is needed for a stage');
      }
      this.name = opts.name;
      this._mode = opts.mode || 'default';
      this._map = {};
      this._names = [];
    }

    Stage.prototype.check = function(arr, rule) {
      switch (this._mode) {
        case 'default':
          return this._map[this._names[0]].check(arr, rule);
      }
    };

    Stage.prototype.add = function(opts) {
      var ruleType;
      if (!opts) {
        return null;
      }
      if (opts instanceof RuleType) {
        ruleType = opts;
      } else {
        ruleType = new RuleType(opts);
      }
      this._map[ruleType.name] = ruleType;
      this._names.push(ruleType.name);
      return ruleType;
    };

    Stage.prototype.canHandle = function(obj) {
      var handler, i, len, name, ref;
      ref = this._names;
      for (i = 0, len = ref.length; i < len; i++) {
        name = ref[i];
        handler = this._map[name];
        if (handler.canHandle(obj)) {
          return handler;
        }
      }
      return null;
    };

    return Stage;

  })();

}).call(this);
