// Generated by CoffeeScript 1.9.1
(function() {
  var Base, OPERATIONS, _,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _ = require('lodash');

  Base = require('./extend');

  OPERATIONS = {
    $in: function(target, arr) {
      return indexOf.call(arr, target) >= 0;
    },
    $eq: _.isEqual,
    $neq: function() {
      return !_.isEqual.apply(_, arguments);
    }
  };

  module.exports = new Base({
    Data: OPERATIONS,
    check: function(arr, op) {
      var handler, key, val;
      for (key in op) {
        val = op[key];
        handler = this.get(key);
        if (!handler) {
          return false;
        }
        handler = _.partial(handler, _, val);
        return _.reduce(_.map(arr, handler), function(a, b) {
          return a && b;
        });
      }
    }
  });

}).call(this);
