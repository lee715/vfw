// Generated by CoffeeScript 1.9.1
(function() {
  var RuleType, _, u;

  RuleType = require('../classes/ruletype');

  _ = require('lodash');

  u = require('../util');

  module.exports = new RuleType({
    DATA: {
      $and: function() {
        var args;
        args = u.slice(arguments);
        return _.reduce(args, function(a, b) {
          return a && b;
        });
      },
      $or: function() {
        var args;
        args = u.slice(arguments);
        return _.reduce(args, function(a, b) {
          return a || b;
        });
      },
      $xor: function() {
        var args;
        args = u.slice(arguments);
        return _.reduce(args, function(a, b) {
          return a ^ b;
        });
      }
    },
    has: function(rule) {
      return !!this.get(rule);
    },
    get: function(rule) {
      var matches;
      if (!(rule && _.isString(rule))) {
        return null;
      }
      matches = rule.match(/^\$[a-zA-Z]+/);
      if (!matches) {
        return null;
      }
      return this.DATA[matches[0]];
    },
    canHandle: function(rule) {
      return this.has(rule);
    },
    getKeyFromStr: function(name) {
      var i, key, keys, len;
      keys = Object.keys(this.DATA);
      for (i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        if (name.indexOf(key) === 0) {
          return key;
        }
      }
      return null;
    },
    name: 'logic'
  });

}).call(this);
